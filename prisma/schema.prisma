generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permission {
  id          Int    @id @default(autoincrement())
  name        String @unique @db.VarChar(255)  
  description String @db.VarChar(255)
  roles       Role[] @relation("RolePermissions")
}

model Role {
  id           Int          @id @default(autoincrement())
  name         String       @unique @db.VarChar(255)  // Explicit roles: "USER", "AGENT", "MANAGER"
  permissions  Permission[] @relation("RolePermissions")
  users        User[]
  agents       Agent[]
}

model User {
  id        Int    @id @default(autoincrement())
  email     String @unique @db.VarChar(255)
  password  String @db.VarChar(255)
  firstName String @map("first_name") @db.VarChar(255)
  lastName  String @map("last_name") @db.VarChar(255)
  username  String @unique @db.VarChar(255)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  role      Role   @relation(fields: [roleId], references: [id])
  roleId    Int
}

model Property {
  id                Int       @id @default(autoincrement())
  listPrice         Decimal   @db.Decimal(10, 2)
  state             String
  city              String
  address           String
  squareFootage     Decimal   @db.Decimal(10, 2)
  numberOfRooms     Int
  numberOfBathrooms Int
  propertyType      String
  images            Json?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  Showing           Showing[]
  agentName         String    @db.VarChar(255)
  agencyName        String    @db.VarChar(255)
}

model Agent {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String   @map("first_name") @db.VarChar(255)
  lastName  String   @map("last_name") @db.VarChar(255)
  username  String   @unique @db.VarChar(255)
  password  String   @db.VarChar(255)
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    Int
}

model Showing {
  id           Int      @id @default(autoincrement())
  property     Property @relation(fields: [propertyId], references: [id])
  propertyId   Int
  scheduledAt  DateTime
  agentName    String   @db.VarChar(255)
  agentCompany String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}